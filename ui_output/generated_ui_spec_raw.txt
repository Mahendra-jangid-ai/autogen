```json
{
  "ui_spec": {
    "project": "Recipe App",
    "inferred_domain": "Food & Recipe",
    "generated_at": "2023-10-27T16:30:00Z",
    "source_files": {
      "system_design": "system_designs/system_design_20250828_150437.json",
      "requirements": "requirements/requirements_20250828_150428.json"
    },
    "purpose": "To design and specify the UI for a recipe application that allows users to search, filter, save, and view recipes.",
    "assumptions": [
      "JWT is used for authentication.",
      "Recipes are fetched in batches of 20.",
      "Images are optimized for web performance.",
      "The application will support English and Spanish."
    ],
    "pages": [
      {
        "purpose": "Display featured recipes and allow users to search for recipes.",
        "props": {
          "schema": {
            "featuredRecipes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RecipeSummary"
              }
            }
          },
          "example": {
            "featuredRecipes": [
              {
                "recipe_id": 1,
                "recipe_name": "Pasta Carbonara",
                "image_url": "/images/pasta_carbonara.jpg",
                "prep_time": 15,
                "cook_time": 20
              }
            ]
          }
        },
        "content": [
          {
            "type": "Heading",
            "content": "Welcome to Our Recipe App!",
            "purpose": "Welcome the user.",
            "developer_instructions": [
              "Render a h1 element with the text."
            ],
            "a11y_notes": "Use role=\"heading\" aria-level=\"1\"",
            "mobile_notes": "Ensure text is appropriately sized for smaller screens.",
            "loading_state": {
              "message": "Loading...",
              "developer_guidance": "Display a loading indicator."
            },
            "empty_state": {},
            "error_state": {}
          },
          {
            "type": "Paragraph",
            "content": "Discover delicious and healthy recipes.",
            "purpose": "Provide a brief description of the app.",
            "developer_instructions": [
              "Render a p element with the text."
            ],
            "a11y_notes": {},
            "mobile_notes": {},
            "loading_state": {},
            "empty_state": {},
            "error_state": {}
          },
          {
            "type": "RecipeList",
            "content": "Featured Recipes",
            "purpose": "Display featured recipes.",
            "developer_instructions": [
              "Fetch featured recipes from `/recipes` endpoint.",
              "Pass the data to the `RecipeList` component."
            ],
            "a11y_notes": "Ensure proper ARIA attributes for list items.",
            "mobile_notes": "Use a responsive grid layout.",
            "loading_state": {
              "message": "Loading featured recipes...",
              "developer_guidance": "Display a loading indicator."
            },
            "empty_state": {
              "message": "No featured recipes found.",
              "developer_guidance": "Display a message indicating no recipes."
            },
            "error_state": {
              "message": "Error loading featured recipes.",
              "developer_guidance": "Display an error message and retry button."
            }
          }
        ]
      }
    ],
    "components": [
      {
        "name": "RecipeCard",
        "type": "Component",
        "props": {
          "schema": {
            "recipe": {
              "$ref": "#/definitions/RecipeSummary"
            }
          }
        },
        "sample_props": {
          "recipe": {
            "recipe_id": 1,
            "recipe_name": "Pasta Carbonara",
            "image_url": "/images/pasta_carbonara.jpg",
            "prep_time": 15,
            "cook_time": 20
          }
        },
        "microcopy": {
          "title": "{{recipe.recipe_name}}",
          "prep_time": "Prep time: {{recipe.prep_time}} min",
          "cook_time": "Cook time: {{recipe.cook_time}} min"
        },
        "validation_rules": {},
        "developer_instructions": [
          "Implement using React.",
          "Use Redux for state management.",
          "Write unit tests using Jest and React Testing Library."
        ],
        "accessibility_notes": "Ensure sufficient color contrast and keyboard navigation."
      }
    ],
    "data_models": {
      "recipes": {
        "fields": [
          { "field": "recipe_id", "type": "SERIAL PRIMARY KEY" },
          { "field": "recipe_name", "type": "VARCHAR(255)", "required": true },
          { "field": "description", "type": "TEXT" },
          { "field": "ingredients", "type": "JSONB" },
          { "field": "instructions", "type": "TEXT" },
          { "field": "image_url", "type": "VARCHAR(255)" },
          { "field": "prep_time", "type": "INTEGER" },
          { "field": "cook_time", "type": "INTEGER" },
          { "field": "servings", "type": "INTEGER" },
          { "field": "calories", "type": "INTEGER" },
          { "field": "dietary_restrictions", "type": "JSONB" },
          { "field": "nutritional_info", "type": "JSONB" }
        ],
        "sample_record": {
          "recipe_id": 1,
          "recipe_name": "Pasta Carbonara",
          "description": "A classic Italian pasta dish.",
          "ingredients": ["pasta", "eggs", "pancetta", "pecorino romano cheese"],
          "instructions": "Cook pasta, whisk eggs with cheese, add pancetta, combine.",
          "image_url": "/images/pasta_carbonara.jpg",
          "prep_time": 15,
          "cook_time": 20,
          "servings": 2,
          "calories": 600,
          "dietary_restrictions": ["gluten-free"],
          "nutritional_info": {
            "carbs": 50,
            "protein": 30,
            "fats": 20
          }
        },
        "indexes": ["recipe_name"],
        "storage_recommendation": "PostgreSQL"
      },
      "users": {
        "fields": [
          { "field": "user_id", "type": "SERIAL PRIMARY KEY" },
          { "field": "username", "type": "VARCHAR(255)", "required": true, "unique": true },
          { "field": "email", "type": "VARCHAR(255)", "required": true, "unique": true },
          { "field": "password", "type": "VARCHAR(255)", "required": true },
          { "field": "saved_recipes", "type": "JSONB" }
        ],
        "sample_record": {
          "user_id": 1,
          "username": "john_doe",
          "email": "john.doe@example.com",
          "password": "$2b$10$...hashed_password...",
          "saved_recipes": [1, 2, 3]
        },
        "indexes": ["username", "email"],
        "storage_recommendation": "PostgreSQL"
      },
      "user_recipes": {
        "fields": [
          { "field": "user_id", "type": "INTEGER", "references": "users(user_id)" },
          { "field": "recipe_id", "type": "INTEGER", "references": "recipes(recipe_id)" },
          { "field": "saved_at", "type": "TIMESTAMP DEFAULT CURRENT_TIMESTAMP" }
        ],
        "sample_record": {
          "user_id": 1,
          "recipe_id": 1,
          "saved_at": "2023-10-27T16:30:00Z"
        },
        "indexes": ["user_id", "recipe_id"],
        "storage_recommendation": "PostgreSQL"
      }
    },
    "flows": [],
    "admin_components": [],
    "implementation_notes": {
      "frontend": "Use React, Redux, and Chart.js.",
      "backend": "Use Node.js and Express.js.",
      "database": "Use PostgreSQL."
    },
    "accessibility_summary": {
      "aria": "Use appropriate ARIA attributes for all interactive elements.",
      "keyboard": "Ensure full keyboard navigation.",
      "contrast": "Maintain sufficient color contrast ratios."
    },
    "i18n_keys_sample": {
      "en": {
        "welcome": "Welcome to Our Recipe App!",
        "search": "Search Recipes"
      },
      "es": {
        "welcome": "¡Bienvenido a nuestra aplicación de recetas!",
        "search": "Buscar recetas"
      }
    },
    "performance_tips": {
      "lcp": "Optimize images and lazy load components.",
      "fid": "Minimize blocking JavaScript.",
      "cls": "Avoid layout shifts."
    },
    "monitoring_and_metrics": {
      "events": [
        "recipe_search",
        "recipe_save",
        "user_signup",
        "user_login"
      ],
      "metrics": [
        "daily_active_users",
        "recipe_views",
        "recipe_saves",
        "search_queries"
      ],
      "alert_thresholds": {
        "error_rate": 0.01
      }
    },
    "testing_plan": {
      "unit": "Write unit tests for all components and services.",
      "integration": "Write integration tests to verify API interactions.",
      "e2e": "Use Cypress or Playwright for end-to-end testing."
    },
    "deployment_plan": {
      "environments": ["development", "staging", "production"],
      "ci_cd": "Use a CI/CD pipeline to automate deployment.",
      "infra": "Use AWS, Docker, and Kubernetes."
    },
    "next_steps": [
      "Implement the Homepage and RecipeCard components.",
      "Develop the backend API endpoints for recipes.",
      "Implement user authentication and authorization.",
      "Design and implement the Recipe Detail page.",
      "Implement recipe saving functionality."
    ]
  }
}
```